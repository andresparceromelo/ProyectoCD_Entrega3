import pytest
from src.model.main import GestorUsuario

# 游릭 Casos normales de creaci칩n de usuario
def test_crear_usuario_normal():
    gestor = GestorUsuario()
    gestor.crear_cuenta({"id_usuario": "juanitoalima침a", "contrase침a": "abc12345"})
    assert "juanitoalima침a" in gestor.usuarios

def test_crear_usuario_con_caracteres_especiales():
    gestor = GestorUsuario()
    gestor.crear_cuenta({"id_usuario": "maria99#*", "contrase침a": "pass98765"})
    assert "maria99#*" in gestor.usuarios

def test_crear_usuario_con_minimo_caracteres():
    gestor = GestorUsuario()
    gestor.crear_cuenta({"id_usuario": "usr", "contrase침a": "abc45678"})
    assert "usr" in gestor.usuarios

# 游댮 Casos error de creaci칩n de usuario 

def test_crear_usuario_existente():
    gestor = GestorUsuario()
    gestor.crear_cuenta({"id_usuario": "juan23", "contrase침a": "abc12345"})
    with pytest.raises(ValueError, match="El usuario ya existe"):
        gestor.crear_cuenta({"id_usuario": "juan23", "contrase침a": "nueva1234"})

def test_crear_usuario_contrase침a_sin_numeros():
    gestor = GestorUsuario()
    with pytest.raises(ValueError, match="La contrase침a debe tener al menos 7 caracteres y 2 n칰meros"):
        gestor.crear_cuenta({"id_usuario": "nuevoUser", "contrase침a": "abcdefg"})

def test_crear_usuario_demasiado_corto():
    gestor = GestorUsuario()
    with pytest.raises(ValueError, match="El nombre de usuario debe tener al menos 3 caracteres"):
        gestor.crear_cuenta({"id_usuario": "ab", "contrase침a": "ab123456"})

# 游리 Casos extremos de creaci칩n de usuario

def test_crear_usuario_nombre_extremadamente_largo():
    gestor = GestorUsuario()
    gestor.crear_cuenta({"id_usuario": "usuario_muy_muy_demasiado_demasiadisimo_largo_12345", "contrase침a": "longpass99"})
    assert "usuario_muy_muy_demasiado_demasiadisimo_largo_12345" in gestor.usuarios

def test_crear_usuario_vacio():
    gestor = GestorUsuario()
    with pytest.raises(ValueError):
        gestor.crear_cuenta({"id_usuario": "", "contrase침a": ""})

def test_crear_usuario_contrase침a_minima_valida():
    gestor = GestorUsuario()
    gestor.crear_cuenta({"id_usuario": "usuarioOK", "contrase침a": "ab12cd34"})
    assert "usuarioOK" in gestor.usuarios
